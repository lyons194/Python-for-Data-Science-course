#NumPy section.

#Numpy arrays usually have the form of either vectors or matrices.

#Vectors are strictly 1-d arrays and matrices are 2-d arrays.


#Numpy arrays

my_list = [1,2,3]

import numpy as np

np.array(my_list)

#Returns a 1-dimensional array

my_mat = [[1,2,3], [4,5,6], [7,8,9]]

np.array(my_mat)

#This above example creates a matrix of the data within the list.



#np.arange()

#Similar to the Python range() function.

np.arange(0,10)

np.arange(0,11)

#When using np.arange(), you can enter a third digit in order to specify the step size.

np.arange(0,11,2)

#The above code will return with 0, and then will increase by steps of 2 until reaching 11.


import numpy as np

np.zeros((5,5))

#The first number in the tuple represents the number of rows and the second number represents the number of columns.

np.zeros((2,3))

#The above code returns a 2 x 3 two dimensional array of zeros.  Hence 'zeros'.

np.ones((2,2))

#The above code returns a 2 x 2 two dimensional array of ones.  Hence, 'ones', etc.
#A method for generating a matrix of ones.

#Another useful function for generating evenly spaced numbers:  'linspace'.

np.linspace(0,5,10)

#For linspace, the first number represents the starting point, the second number represents the ending point, and the third numbers represents how many spaces in between the first two numbers you want to return.

np.linspace(0,5,100)














